 1 program palavra reservada
 2 var palavra reservada
 2 begin palavra reservada
 3 char palavra reservada
 3 a Identificador
 3 = operador relacional
 3 'a' char
 3 , delimitador
 3 a Identificador
 3 [ delimitador
 3 1 numero
 3 ] delimitador
 3 , delimitador
 3 a Identificador
 3 = operador relacional
 3 [ delimitador
 3 1 numero
 3 ] delimitador
 3 ; delimitador
 4 boolean palavra reservada
 4 t Identificador
 4 , delimitador
 4 a Identificador
 4 = operador relacional
 4 1 numero
 4 ; delimitador
 5 real palavra reservada
 5 ameixa Identificador
 5 [ delimitador
 5 1 numero
 5 ] delimitador
 5 [ delimitador
 5 2 numero
 5 ] delimitador
 5 [ delimitador
 5 3 numero
 5 ] delimitador
 5 = operador relacional
 5 [ delimitador
 5 true palavra reservada
 5 , delimitador
 5 6 numero
 5 , delimitador
 5 "amora" string
 5 , delimitador
 5 1 numero
 5 ] delimitador
 5 , delimitador
 5 a Identificador
 5 , delimitador
 5 n Identificador
 5 = operador relacional
 5 1 numero
 5 ; delimitador
 6 end palavra reservada
 7 const palavra reservada
 7 begin palavra reservada
 8 integer palavra reservada
 8 a Identificador
 8 = operador relacional
 8 1 numero
 8 , delimitador
 8 a Identificador
 8 [ delimitador
 8 1 numero
 8 ] delimitador
 8 = operador relacional
 8 4 numero
 8 ; delimitador
 9 char palavra reservada
 9 a Identificador
 9 = operador relacional
 9 "amora" string
 9 , delimitador
 9 a Identificador
 9 = operador relacional
 9 1 numero
 9 ; delimitador
 10 real palavra reservada
 10 quero Identificador
 10 = operador relacional
 10 "chocolate" string
 10 , delimitador
 10 a Identificador
 10 = operador relacional
 10 'a' char
 10 ; delimitador
 11 string palavra reservada
 11 ameixa Identificador
 11 = operador relacional
 11 [ delimitador
 11 1 numero
 11 , delimitador
 11 2 numero
 11 ] delimitador
 11 , delimitador
 11 flocos Identificador
 11 = operador relacional
 11 1 numero
 11 ; delimitador
 12 end palavra reservada
 13 function palavra reservada
 13 teste Identificador
 13 ( delimitador
 13 integer palavra reservada
 13 a Identificador
 13 , delimitador
 13 real palavra reservada
 13 b Identificador
 13 ) delimitador
 13 : delimitador
 13 real palavra reservada
 13 begin palavra reservada
 14 a Identificador
 14 = operador relacional
 14 [ delimitador
 14 a Identificador
 14 ] delimitador
 14 ; delimitador
 15 a Identificador
 15 = operador relacional
 15 true palavra reservada
 15 ; delimitador
 16 uedna Identificador
 16 = operador relacional
 16 a Identificador
 16 ( delimitador
 16 1 numero
 16 ) delimitador
 16 + operador aritmetico
 16 2 numero
 16 ; delimitador
 17 integer palavra reservada
 17 a Identificador
 17 , delimitador
 17 b Identificador
 17 , delimitador
 17 c Identificador
 17 = operador relacional
 17 1 numero
 17 ; delimitador
 18 segura Identificador
 18 = operador relacional
 18 "namaodeDeus" string
 18 ; delimitador
 19 text Identificador
 19 = operador relacional
 19 ( delimitador
 19 2 numero
 19 -1 numero
 19 ) delimitador
 19 * operador aritmetico
 19 ( delimitador
 19 2 numero
 19 ) delimitador
 19 ; delimitador
 20 read palavra reservada
 20 ( delimitador
 20 s Identificador
 20 , delimitador
 20 c Identificador
 20 ) delimitador
 20 ; delimitador
 21 amora Identificador
 21 ( delimitador
 21 1 numero
 21 ) delimitador
 21 ; delimitador
 22 while palavra reservada
 22 ( delimitador
 22 ( delimitador
 22 a Identificador
 22 <= operador relacional
 22 b Identificador
 22 ) delimitador
 22 ) delimitador
 22 do palavra reservada
 22 begin palavra reservada
 23 a Identificador
 23 = operador relacional
 23 1 numero
 23 ; delimitador
 24 teste Identificador
 24 ; delimitador
 25 end palavra reservada
 26 write palavra reservada
 26 ( delimitador
 26 "amora" string
 26 , delimitador
 26 1 numero
 26 , delimitador
 26 c Identificador
 26 , delimitador
 26 "oi" string
 26 , delimitador
 26 'a' char
 26 ) delimitador
 26 ; delimitador
 27 write palavra reservada
 27 ( delimitador
 27 a Identificador
 27 + operador aritmetico
 27 b Identificador
 27 , delimitador
 27 1 numero
 27 ) delimitador
 27 ; delimitador
 28 retorno Identificador
 28 -> retorno
 28 ( delimitador
 28 a Identificador
 28 ) delimitador
 28 ; delimitador
 29 if palavra reservada
 29 ( delimitador
 29 a Identificador
 29 > operador relacional
 29 b Identificador
 29 || operador logico
 29 c Identificador
 29 > operador relacional
 29 d Identificador
 29 ) delimitador
 29 then palavra reservada
 29 begin palavra reservada
 30 a Identificador
 30 = operador relacional
 30 1 numero
 30 ; delimitador
 31 n Identificador
 31 = operador relacional
 31 1 numero
 31 ; delimitador
 32 end palavra reservada
 33 else palavra reservada
 33 begin palavra reservada
 34 n Identificador
 34 = operador relacional
 34 1 numero
 34 ; delimitador
 35 hoje Identificador
 35 ; delimitador
 36 end palavra reservada
 37 end palavra reservada
 38 function palavra reservada
 38 amora Identificador
 38 ( delimitador
 38 ) delimitador
 38 begin palavra reservada
 39 end palavra reservada
 40 function palavra reservada
 40 txt Identificador
 40 ( delimitador
 40 integer palavra reservada
 40 a Identificador
 40 ) delimitador
 40 begin palavra reservada
 41 end palavra reservada

 Nao existem erros lexicos
